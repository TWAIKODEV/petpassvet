version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - BASE_URL=${BASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - RABBITMQ_URL=amqp://rabbitmq
      - WA_PHONE_NUMBER_ID=${WA_PHONE_NUMBER_ID}
      - WA_TOKEN=${WA_TOKEN}
      - WA_APP_SECRET=${WA_APP_SECRET}
      - WA_VERIFY_TOKEN=${WA_VERIFY_TOKEN}
      - FB_PAGE_ID=${FB_PAGE_ID}
      - FB_PAGE_TOKEN=${FB_PAGE_TOKEN}
      - FB_APP_SECRET=${FB_APP_SECRET}
      - FB_VERIFY_TOKEN=${FB_VERIFY_TOKEN}
      - IG_PAGE_ID=${IG_PAGE_ID}
      - IG_ACCESS_TOKEN=${IG_ACCESS_TOKEN}
      - IG_APP_SECRET=${IG_APP_SECRET}
      - IG_VERIFY_TOKEN=${IG_VERIFY_TOKEN}
      - MS_TENANT_ID=${MS_TENANT_ID}
      - MS_CLIENT_ID=${MS_CLIENT_ID}
      - MS_CLIENT_SECRET=${MS_CLIENT_SECRET}
      - MS_CLIENT_STATE=${MS_CLIENT_STATE}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
    depends_on:
      - postgres
      - rabbitmq
    restart: unless-stopped

  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:80"
    restart: unless-stopped

  # PostgreSQL database
  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # RabbitMQ message broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped

volumes:
  postgres_data:
  rabbitmq_data: