[CONVEX M(patients:createPatient)] [Request ID: 8a535f967137945b] Server Error
ArgumentValidationError: Object is missing the required field `birthDate`. Consider wrapping the field validator in `v.optional(...)` if this is expected.

Object: {address: "Calle de Beatriz de Bobadilla, 9. Madrid", birth_date: "2025-06-05", email: "test@test.com", firstName: "Test", idNumber: "879789", lastName: "Test", marketing: {}, pet: {}, petPass: {}, phone: "test", services: {}}
Validator: v.object({address: v.string(), bankAccount: v.optional(v.string()), birthDate: v.string(), creditCard: v.optional(v.string()), email: v.string(), gender: v.union(v.literal("male"), v.literal("female"), v.literal("other")), insuranceNumber: v.optional(v.string()), insuranceProvider: v.optional(v.string()), marketing: v.object({acceptsDataProtection: v.boolean(), acceptsEmailMarketing: v.boolean(), acceptsWhatsAppComm: v.boolean()}), medicalHistory: v.optional(v.array(v.string())), name: v.string(), pet: v.object({accidents: v.array(v.object({date: v.string(), description: v.string(), treatment: v.string()})), birthDate: v.string(), breed: v.string(), healthPlans: v.array(v.object({endDate: v.string(), name: v.string(), startDate: v.string()})), isNeutered: v.boolean(), microchipNumber: v.optional(v.string()), name: v.string(), otherTests: v.array(v.object({date: v.string(), result: v.string(), type: v.string()})), sex: v.union(v.literal("male"), v.literal("female")), species: v.string(), surgeries: v.array(v.object({date: v.string(), notes: v.string(), type: v.string()})), vaccines: v.array(v.object({date: v.string(), name: v.string(), nextDue: v.optional(v.string())}))}), petPass: v.object({hasPetPass: v.boolean(), plan: v.optional(v.union(v.literal("track"), v.literal("protect"), v.literal("vetcare")))}), phone: v.string(), preferredContact: v.union(v.literal("phone"), v.literal("email"), v.literal("whatsapp"), v.literal("sms")), services: v.object({wantsFoodDelivery: v.boolean(), wantsGrooming: v.boolean(), wantsHotelService: v.boolean(), wantsTraining: v.boolean()})})